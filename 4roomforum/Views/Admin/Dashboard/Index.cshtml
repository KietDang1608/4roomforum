@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Dashboard";
    Layout = "_AdminLayout";
}

<!-- Include Chart.js from CDN -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>

<div class="container">
    @* <div class="row">
        <!-- Selection for Year and Month -->
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    Select Time Period
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <label for="timePeriod">Select Time Period:</label>
                        <select id="timePeriod" class="form-control">
                            <option value="year">Year</option>
                            <option value="month">Month</option>
                        </select>
                    </div>
                    <div class="form-group" id="yearSelection" style="display: none;">
                        <label for="year">Select Year:</label>
                        <select id="year" class="form-control">
                            <!-- Add options for years dynamically or statically -->
                            <option value="2023">2023</option>
                            <option value="2022">2022</option>
                            <option value="2021">2021</option>
                        </select>
                    </div>
                    <div class="form-group" id="monthSelection" style="display: none;">
                        <label for="startMonth">Select Start Month:</label>
                        <select id="startMonth" class="form-control">
                            <!-- Add options for months -->
                            <option value="1">January</option>
                            <option value="2">February</option>
                            <option value="3">March</option>
                            <!-- Add other months -->
                        </select>
                        <label for="endMonth">Select End Month:</label>
                        <select id="endMonth" class="form-control">
                            <!-- Add options for months -->
                            <option value="1">January</option>
                            <option value="2">February</option>
                            <option value="3">March</option>
                            <!-- Add other months -->
                        </select>
                    </div>
                </div>
            </div>
        </div> *@

<div class="row mt-4">
    @if (Model != null)
    {
        foreach (var post in Model)
        {
            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-body">
                        <h5 class="card-title">@post.PostTitle</h5>
                        <p class="card-text">@post.PostContent</p>
                        <span class="badge bg-info text-dark">Likes: @post.Like</span>
                         <small class="text-muted">Ngày đăng: @post.PostDate.ToString("dd/MM/yyyy")</small>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p>No posts available.</p>
    }
</div>


        <!-- Amount of Posts in Year and Month -->
        @* <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    Posts Overview
                </div>
                <div class="card-body">
                    <canvas id="postsOverviewChart"></canvas>
                </div>
            </div>
        </div> *@

        <!-- Top Users -->
        @* <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    Top Users
                </div>
                <div class="card-body">
                    <canvas id="topUsersChart"></canvas>
                </div>
            </div>
        </div> *@

        <!-- Posts with Most Interactions -->
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    Most Interacted Posts
                </div>
                <div class="card-body">
                    <canvas id="mostInteractedPostsChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    @* document.getElementById('timePeriod').addEventListener('change', function() {
        var value = this.value;
        document.getElementById('yearSelection').style.display = value === 'year' ? 'block' : 'none';
        document.getElementById('monthSelection').style.display = value === 'month' ? 'block' : 'none';
    });

    document.getElementById('year').addEventListener('change', function() {
        var year = this.value;
        // Fetch data for the selected year and update the chart
        updateChartForYear(year);
    });

    document.getElementById('startMonth').addEventListener('change', function() {
        var startMonth = this.value;
        var endMonth = document.getElementById('endMonth').value;
        // Fetch data for the selected month range and update the chart
        updateChartForMonthRange(startMonth, endMonth);
    });

    document.getElementById('endMonth').addEventListener('change', function() {
        var startMonth = document.getElementById('startMonth').value;
        var endMonth = this.value;
        // Fetch data for the selected month range and update the chart
        updateChartForMonthRange(startMonth, endMonth);
    });

    function updateChartForYear(year) {
        // Example data for demonstration
        var data = {
            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
            datasets: [{
                label: 'Number of Posts',
                data: [100, 120, 150, 130, 170, 160, 180, 190, 200, 210, 220, 230], // Replace with actual data
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        };
        postsOverviewChart.data = data;
        postsOverviewChart.update();
    }

    function updateChartForMonthRange(startMonth, endMonth) {
        // Example data for demonstration
        var data = {
            labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],
            datasets: [{
                label: 'Number of Posts',
                data: [30, 40, 50, 60], // Replace with actual data
                backgroundColor: 'rgba(153, 102, 255, 0.2)',
                borderColor: 'rgba(153, 102, 255, 1)',
                borderWidth: 1
            }]
        };
        postsOverviewChart.data = data;
        postsOverviewChart.update();
    }

    // Initial chart setup
    var postsOverviewCtx = document.getElementById('postsOverviewChart').getContext('2d');
    var postsOverviewChart = new Chart(postsOverviewCtx, {
        type: 'bar',
        data: {
            labels: ['Year', 'Month'],
            datasets: [{
                label: 'Number of Posts',
                data: [1200, 100], // Static data for demonstration
                backgroundColor: ['rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)'],
                borderColor: ['rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)'],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    // Data for Top Users Chart
    var topUsersCtx = document.getElementById('topUsersChart').getContext('2d');
    var topUsersChart = new Chart(topUsersCtx, {
        type: 'bar',
        data: {
            labels: ['User1', 'User2', 'User3', 'User4', 'User5'], // Static data for demonstration
            datasets: [{
                label: 'Number of Posts',
                data: [150, 120, 110, 100, 90], // Static data for demonstration
                backgroundColor: 'rgba(255, 159, 64, 0.2)',
                borderColor: 'rgba(255, 159, 64, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    }); *@

var chartLabels = @Html.Raw(Json.Serialize(ViewBag.ChartLabels));
var chartData = @Html.Raw(Json.Serialize(ViewBag.ChartData));
var chartTitles = @Html.Raw(Json.Serialize(ViewBag.ChartTitles));

    // Data for Most Interacted Posts Chart
    var mostInteractedPostsCtx = document.getElementById('mostInteractedPostsChart').getContext('2d');
    var mostInteractedPostsChart = new Chart(mostInteractedPostsCtx, {
        type: 'bar',
        data: {
            labels: chartLabels, // Static data for demonstration
            datasets: [{
                label: 'Number of Interactions',
                data: chartData, // Static data for demonstration
                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        },
        options: {
            plugins: {
                // Plugin để vẽ text trên đỉnh cột
                tooltip: {
                    enabled: false, // Ẩn tooltip mặc định
                },
                datalabels: {
                    anchor: 'end',
                    align: 'start',
                    formatter: function(value, context) {
                        // Hiển thị tiêu đề bài viết
                        return chartTitles[context.dataIndex];
                    },
                    font: {
                        size: 10,
                    },
                    color: '#000',
                    clamp: true
                }
            },
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        },
        plugins: [ChartDataLabels] // Thêm plugin ChartDataLabels

    });
</script>

