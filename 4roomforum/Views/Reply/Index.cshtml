
@{
    ViewBag.Title = "Forum Post Details";
    var PaginationReplies = ViewBag.PaginationReplies as IEnumerable<ReplyDTO>;
    var CurrentPage = ViewBag.CurrentPage;
    var TotalPages = ViewBag.TotalPages;

    var GetAReply = ViewBag.MyFunction as Func<int, Task<ReplyDTO>>;

    var post = ViewBag.Post as PostDTO;
    //var users = ViewBag.Users as IEnumerable<UserDTO>;
    var GetAUser = ViewBag.GetUserReply as Func<int, Task<UserDTO>>;
    var TotalReplies = ViewBag.TotalReplies;
    var PostedBy = ViewBag.UserPost as UserDTO;

    var pageSize = ViewBag.PageSize;

    var UserId = ViewBag.UserId;
}

@if (TempData["Message"] != null)
{
    <div class="alert alert-danger">
        @TempData["Message"]
    </div>
}
@{
    var scriptUrl = "https://cdn.jsdelivr.net/npm/@microsoft/signalr@6.0.0/dist/browser/signalr.min.js";
}
<script src="@scriptUrl"></script>



<div class="container mt-4">
    <!-- Tiêu đề bài viết -->
    <div class="border-bottom mb-3 pb-2">
        <h1 class="fw-bold">[Tiêu đề bài viết]</h1>
        <p class="text-muted">
            Posted by
            <span class="text-primary fw-semibold">@PostedBy.UserName</span>
            at <span>@post.PostDate</span>
            @if (post.IsEdited)
            {
                <span>(Đã chỉnh sửa)</span>
            }
        </p>
    </div>

    <!-- Nội dung bài viết -->
    <div class="card mb-4">
        <div class="card-body">
            <p class="fs-5">@post.PostContent</p>
        </div>
    </div>

    <div class="border-bottom mb-4">
        <div class="d-flex flex-row justify-content-end">
            <div class="p-2">
                <i class="fa-solid fa-heart"><a href="#"></a></i>
                <!--<i class="fa-regular fa-heart"></i>-->
                <span>1000</span>
            </div>      
            <div class="p-2">
                <button id="openFormButtonAtPost"><i class="fa-solid fa-comment "></i></button>
                <!--<i class="fa-regular fa-comment"></i>-->
                <span>@TotalReplies</span>
            </div>
            <div class="p-2">
                <i class="fa-solid fa-share"><a href="#"></a></i>
            </div>            
        </div>
    </div>
     
    @if (PaginationReplies != null && TotalReplies > 0)
    {
        foreach (ReplyDTO r in PaginationReplies)
        {
            <div id="commentsContainer"></div>

            <!-- Bình luận -->
            <div class="row mb-4">
                <div class="col-md-2 text-center">
                    <div class="bg-warning text-dark rounded-circle d-flex justify-content-center align-items-center mx-auto" style="width: 60px; height: 60px;">
                        <strong>KCC</strong>
                    </div>
                    <p class="mt-2 fw-bold">
                        @{
                            var user = await GetAUser(r.RepliedBy) as UserDTO;
                        }
                        @user.UserName
                    </p>
                </div>
                <div class="col-md-10">
                    <div class="card">
                        <div class="card-header bg-light">
                            <strong>@r.ReplyDate</strong>
                        </div>
                        <div class="card-body">
                            <!-- Bình luận được phản hồi -->
                            @if (r.ReplyToReply != null)
                            {
                                var reply = await GetAReply((int)r.ReplyToReply) as ReplyDTO; // Gọi hàm và chờ kết quả
                                var ReplyTo = await GetAUser(r.RepliedBy) as UserDTO;
                                <blockquote class="p-2 bg-light border rounded">
                                    <p>
                                        <strong class="text-primary">@ReplyTo.UserName said:</strong>
                                        <br>
                                        @reply.ReplyContent
                                    </p>
                                </blockquote>
                            }
                            <!-- Bình luận chính -->
                            <p class="mt-3">@r.ReplyContent</p>
                        </div>
                        <div class="card-footer">
                            <div class="d-flex flex-row justify-content-start">
                                <div class="p-2">
                                    <i class="fa-solid fa-thumbs-up"></i>
                                    <!--<i class="fa-regular fa-thumbs-up"></i>-->
                                    <span>10</span>
                                </div>
                                <div class="p-2">
                                    <i class="fa-regular fa-thumbs-down"></i>
                                    <!--<i class="fa-solid fa-thumbs-down"></i>-->
                                    <span>-10</span>
                                </div>
                                <div class="p-2">
                                    <button class="comment-for-reply" value='@Html.Raw($"[\"{r.ReplyId}\", \"{user.UserName}\"]")'>
                                        <i class="fa-solid fa-comment"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>    
        }
    }
    else
    {
        <p>Không có bình luận nào.</p>
    }
</div>

@if (TotalPages > 0)
{
    <div class="d-flex justify-content-center align-items-center">
        <nav aria-label="Reply Pagination">
            <ul class="pagination">

                <li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="?PostId=@post.Id&page=@(CurrentPage - 1)" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                
                @for (int i = 1; i <= TotalPages; i++)
                {
                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                        <a class="page-link" href="?PostId=@(post.Id)&page=@i">@i</a>
                    </li>
                }

                <li class="page-item @(CurrentPage == TotalPages ? "disabled" : "")">
                    <a class="page-link" href="?PostId=@post.Id&page=@(CurrentPage + 1)" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>

            </ul>
        </nav>
    </div>  
}

<!-- Sticky Form -->
<div class="sticky-form">
    <div class="container">
        <h5 class="text-info">Let's have a civilized discussion!</h5>
        <form id="replyForm" asp-controller="Reply" asp-action="Create" method="post" novalidate>
            <div class="mb-3">
                <label for="replyContent" class="form-label text-primary"></label>
                <textarea class="form-control" id="replyContent" name="ReplyContent" rows="3" placeholder="Write your reply here..." required></textarea>
                <div class="invalid-feedback">
                    Please enter your reply!
                </div>
            </div>

            <!--<div class="mb-3">
                
                <label for="replyImage" class="form-label">Upload Image</label>
                <input type="file" class="form-control" id="replyImage" accept="image/*">
            </div>-->

            <!-- Hidden field for PostId -->
            <input type="hidden" id="postId" name="PostId" value="@post.Id" />

            <!-- Hidden field for RepliedBy -->
            <input type="hidden" id="repliedBy" name="RepliedBy" value="@UserId" />

            <input type="hidden" id="replyToReply" name="ReplyToReply"/>

            <button type="submit" class="btn btn-primary">Post Reply</button>
            <button type="button" class="btn btn-danger" id="closeForm">Close</button>
        </form>
    </div>
</div>

<!-- Bootstrap JS (without Popper.js) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"></script>
<script>
    // Close the form when the close button is clicked
    document.getElementById('closeForm').addEventListener('click', function () {
        document.querySelector('.sticky-form').style.display = 'none';
    });

    // Hiển thị form khi nút "Comment" được nhấn
    document.getElementById('openFormButtonAtPost').addEventListener('click', function () {
        document.querySelector('.sticky-form').style.display = 'block';
        document.querySelector('.form-label').innerHTML = "You're replying to @PostedBy.UserName's Post";
        document.getElementById('replyToReply').value = null;
    });

    // Hiển thị form khi nút "Comment" trên comment được nhấn
    var elements = document.querySelectorAll(".comment-for-reply");

    elements.forEach(function (element) {
        element.addEventListener('click', function () {
            // Lấy giá trị JSON từ nút được nhấn
            var value = JSON.parse(this.value);
            console.log(value);
            // Hiển thị form
            document.querySelector('.sticky-form').style.display = 'block';

            // Cập nhật nhãn trong form
            document.querySelector('.form-label').innerHTML = "You're replying to " + value[1] + "'s Comment";


            // Thiết lập thuộc tính cho thẻ input
            document.getElementById('replyToReply').value = value[0]; // Giá trị của input (value attribute)

        });
    });


    // Đóng form khi nút "Close" trong form được nhấn
    document.getElementById('closeForm').addEventListener('click', function () {
        document.querySelector('.sticky-form').style.display = 'none';
    });

    // Validation
    (function () {
        'use strict';
        var form = document.getElementById('replyForm');
        var replyContent = document.getElementById('replyContent');
        form.addEventListener('submit', function (event) {
            if (!form.checkValidity()) {
                event.preventDefault(); // Prevent form submission
                event.stopPropagation(); // Stop propagation
            }
            if (!replyContent.value.trim()) {
                event.preventDefault(); // Ngăn gửi form
                event.stopPropagation(); // Dừng sự kiện
            }
            form.classList.add('was-validated'); // Add Bootstrap validation style
        }, false);
    })();
</script>
<!-- Thêm jQuery vào trang -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script src="~/js/Comment.js"></script>

<style>
    /* Sticky form at the bottom */
    .sticky-form {
        position: fixed;
        bottom: 0;
        right: 0; /* Di chuyển form vào góc phải */
        background-color: white;
        padding: 10px 20px;
        box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
        z-index: 9999;
        width: 100%; /* Set width to 100% of max-width */
        max-width: 600px; /* Giới hạn chiều rộng form */
        display: none; /* Ẩn form khi không sử dụng */
        border-radius: 10px;
    }

    .sticky-form input[type="file"] {
        display: inline-block;
        margin-top: 5px;
    }

    #openFormButtonAtPost{
        border: none;
        background-color: inherit;
    }

    #openFormButtonAtPost:hover{
        border-radius:5px;
        background-color: darkgray;
    }

    .comment-for-reply{
        border: none;
        background-color: inherit;
    }

    .comment-for-reply:hover {
        border-radius: 5px;
        background-color: darkgray;
    }
</style>

